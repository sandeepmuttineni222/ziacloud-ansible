---
- name: Include default variables
  ansible.builtin.include_vars:
    file: ../defaults/main.yml

- name: Import Random String Generator Tasks
  ansible.builtin.import_tasks: ../../../generate_random_string.yml

- name: Ensure required environment variables are set
  ansible.builtin.fail:
    msg: "{{ env_var }} is not defined as environment variable"
  when: lookup('env', env_var) is none
  loop:
    - ZIA_USERNAME
    - ZIA_PASSWORD
    - ZIA_API_KEY
    - ZIA_CLOUD
  loop_control:
    loop_var: env_var

- name: Ensure ZIA Credential environment variables are set
  ansible.builtin.set_fact:
    zia_cloud:
      username: "{{ lookup('env', 'ZIA_USERNAME') }}"
      password: "{{ lookup('env', 'ZIA_PASSWORD') }}"
      api_key: "{{ lookup('env', 'ZIA_API_KEY') }}"
      cloud: "{{ lookup('env', 'ZIA_CLOUD') | default(omit) }}"
  no_log: true

- name: Main block to Test Cloud Firewall Rule Configuration
  block:
    # Authentication Setting
    - name: Ensure Authentication Setting (leftover)
      zscaler.ziacloud.zia_authentication_settings:
        provider: "{{ zia_cloud }}"
        state: absent
        urls: "{{ urls }}"
      register: result

  rescue:
    - name: Handle errors
      ansible.builtin.debug:
        msg: An error occurred.

  always:
    - name: Cleanup operations
      ansible.builtin.debug:
        msg: Cleanup complete.

    - name: Ensure Authentication Setting is absent
      zscaler.ziacloud.zia_authentication_settings:
        provider: "{{ zia_cloud }}"
        state: absent
        urls: "{{ urls }}"
      register: result

    - name: Verify Authentication Setting is absent
      ansible.builtin.assert:
        that:
          - not result.changed
          # - result.data is defined

    - name: Ensure Authentication Setting is (Present)
      zscaler.ziacloud.zia_authentication_settings:
        provider: "{{ zia_cloud }}"
        state: present
        urls: "{{ urls }}"
      register: result

    - name: Verify Authentication Setting is present
      ansible.builtin.assert:
        that:
          - result.changed
          - result.exempted_urls is defined
          - "'.okta.com' in result.exempted_urls"
      when: result.failed is not defined or not result.failed

    - name: Ensure Authentication Setting (again; idempotency check)
      zscaler.ziacloud.zia_authentication_settings:
        provider: "{{ zia_cloud }}"
        state: present
        urls: "{{ urls }}"
      register: result

    - name: Ensure Authentication Setting is absent (idempotency check)
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Fetch all Authentication Setting
      zscaler.ziacloud.zia_authentication_settings:
        provider: "{{ zia_cloud }}"
        urls: "{{ urls }}"
      register: result

    - name: Ensure all Authentication Setting found
      ansible.builtin.assert:
        that:
          - not result.failed
          # Optionally, check specific messages or other indicators of success
          - result.msg == "No new URLs to add."
      when: result.failed is not defined or not result.failed

    - name: Fetch this Authentication Setting
      zscaler.ziacloud.zia_authentication_settings:
        provider: "{{ zia_cloud }}"
        urls: "{{ urls }}"
      register: result

    - name: Ensure this Authentication Setting is found
      ansible.builtin.assert:
        that:
          - not result.failed
          # Optionally, check specific messages or other indicators of success
          - result.msg == "No new URLs to add."
      when: result.failed is not defined or not result.failed

    - name: Give the ZIA Cloud a 5 seconds to settle
      ansible.builtin.pause:
        seconds: 5

    - name: Delete Authentication Setting
      zscaler.ziacloud.zia_authentication_settings:
        provider: "{{ zia_cloud }}"
        state: absent
        urls: "{{ urls }}"
      register: result

    - name: Verify Authentication Setting is Deleted
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Delete Authentication Setting (again; idempotency check)
      zscaler.ziacloud.zia_authentication_settings:
        provider: "{{ zia_cloud }}"
        state: absent
        urls: "{{ urls }}"
      register: result

    - name: Verify Authentication Setting is absent
      ansible.builtin.assert:
        that:
          - not result.failed
          - not result.changed
