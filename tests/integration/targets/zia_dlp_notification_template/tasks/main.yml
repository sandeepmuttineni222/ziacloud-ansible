---
- name: Include default variables
  ansible.builtin.include_vars:
    file: "../defaults/main.yml"

- name: Import Random String Generator Tasks
  ansible.builtin.import_tasks: "../../../generate_random_string.yml"

- ansible.builtin.set_fact:
    name: "{{ name }}_{{ random_string }}"

- ansible.builtin.set_fact:
    name: "{{ name }}_{{ random_string }}"

- name: Ensure required environment variables are set
  fail:
    msg: "{{ env_var }} is not defined as environment variable"
  when: lookup('env', env_var) is none
  loop:
    - ZIA_USERNAME
    - ZIA_PASSWORD
    - ZIA_API_KEY
    - ZIA_CLOUD
  loop_control:
    loop_var: env_var

- ansible.builtin.set_fact:
    zia_cloud:
      username: "{{ lookup('env', 'ZIA_USERNAME') }}"
      password: "{{ lookup('env', 'ZIA_PASSWORD') }}"
      api_key: "{{ lookup('env', 'ZIA_API_KEY') }}"
      cloud: "{{ lookup('env', 'ZIA_CLOUD') | default(omit) }}"
  no_log: True

- block:
    - name: Ensure DLP Notification Template (leftover)
      zscaler.ziacloud.zia_dlp_notification_template:
        provider: "{{ zia_cloud }}"
        state: absent
        name: "{{ name }}"
      register: result

    - name: Ensure DLP Notification Template is absent
      zscaler.ziacloud.zia_dlp_notification_template:
        provider: "{{ zia_cloud }}"
        state: absent
        name: "{{ name }}"
      register: result

    - name: Verify DLP Notification Template is absent
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Ensure DLP Notification Template is (Present)
      zscaler.ziacloud.zia_dlp_notification_template:
        provider: "{{ zia_cloud }}"
        state: present
        name: "{{ name }}"
        attach_content: "{{ attach_content }}"
        tls_enabled: "{{ tls_enabled }}"
        subject: "{{ subject }}"
        plain_text_message: "{{ plain_text_message }}"
        html_message: "{{ html_message }}"
      register: result

    - name: Verify DLP Notification Template is present
      ansible.builtin.assert:
        that:
          - result.changed
          - result.data is defined
          - result.data.name is defined

    - name: Ensure DLP Notification Template (again; idempotency check)
      zscaler.ziacloud.zia_dlp_notification_template:
        provider: "{{ zia_cloud }}"
        state: present
        name: "{{ name }}"
        attach_content: "{{ attach_content }}"
        tls_enabled: "{{ tls_enabled }}"
        subject: "{{ subject }}"
        plain_text_message: "{{ plain_text_message }}"
        html_message: "{{ html_message }}"
      register: result

    - name: Ensure DLP Notification Template is present (idempotency check)
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Update DLP Notification Template (Present)
      zscaler.ziacloud.zia_dlp_notification_template:
        provider: "{{ zia_cloud }}"
        state: present
        name: "{{ name }}"
        subject: "{{ subject }}"
        attach_content: "{{ attach_content_update }}"
        tls_enabled: "{{ tls_enabled_update }}"
        plain_text_message: "{{ plain_text_message }}"
        html_message: "{{ html_message }}"
      register: result

    - name: Verify DLP Notification Template is Updated
      ansible.builtin.assert:
        that:
          - result.changed
          - result.data is defined
          - result.data.name == name
          - result.data.attach_content == attach_content_update
          - result.data.tls_enabled == tls_enabled_update

    - name: Ensure DLP Notification Template is Updated (again; idempotency check)
      zscaler.ziacloud.zia_dlp_notification_template:
        provider: "{{ zia_cloud }}"
        state: present
        name: "{{ name }}"
        subject: "{{ subject }}"
        attach_content: "{{ attach_content_update }}"
        tls_enabled: "{{ tls_enabled_update }}"
        plain_text_message: "{{ plain_text_message }}"
        html_message: "{{ html_message }}"
      register: result

    - name: Ensure DLP Notification Template update is idempotent
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Fetch all DLP Notification Template
      zscaler.ziacloud.zia_dlp_notification_template_facts:
        provider: "{{ zia_cloud }}"
      register: result

    - name: Ensure all DLP Notification Template found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data[0] is defined

    - name: Fetch this DLP Notification Template
      zscaler.ziacloud.zia_dlp_notification_template_facts:
        provider: "{{ zia_cloud }}"
        name: "{{ name }}"
      register: result

    - name: Ensure this DLP Notification Template is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
          - result.data[0].name is defined
          - result.data[0].name == name

    - name: Give the ZIA Cloud a 5 seconds to settle
      ansible.builtin.pause:
        seconds: 5

    - name: Delete DLP Notification Template
      zscaler.ziacloud.zia_dlp_notification_template:
        provider: "{{ zia_cloud }}"
        state: absent
        name: "{{ name }}"
      register: result

    - name: Verify DLP Notification Template is Deleted
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Delete DLP Notification Template (again; idempotency check)
      zscaler.ziacloud.zia_dlp_notification_template:
        provider: "{{ zia_cloud }}"
        state: absent
        name: "{{ name }}"
      register: result

    - name: Verify DLP Notification Template is absent
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
