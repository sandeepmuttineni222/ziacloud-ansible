---
- name: Include default variables
  ansible.builtin.include_vars:
    file: "../defaults/main.yml"

- name: Import Random String Generator Tasks
  ansible.builtin.import_tasks: "../../../generate_random_string.yml"

- ansible.builtin.set_fact:
    name: "{{ name }}_{{ random_string }}"
    description: "{{ description }}_{{ random_string }}"

- name: Ensure required environment variables are set
  fail:
    msg: "{{ env_var }} is not defined as environment variable"
  when: lookup('env', env_var) is none
  loop:
    - ZIA_USERNAME
    - ZIA_PASSWORD
    - ZIA_API_KEY
    - ZIA_CLOUD
  loop_control:
    loop_var: env_var

- ansible.builtin.set_fact:
    zia_cloud:
      username: "{{ lookup('env', 'ZIA_USERNAME') }}"
      password: "{{ lookup('env', 'ZIA_PASSWORD') }}"
      api_key: "{{ lookup('env', 'ZIA_API_KEY') }}"
      cloud: "{{ lookup('env', 'ZIA_CLOUD') | default(omit) }}"
  no_log: True

- block:
    - name: Ensure Cloud Web DLP Rule (leftover)
      zscaler.ziacloud.zia_dlp_web_rules:
        provider: "{{ zia_cloud }}"
        state: absent
        name: "{{ name }}"
      register: result

    - name: Ensure Cloud Web DLP Rule is absent
      zscaler.ziacloud.zia_dlp_web_rules:
        provider: "{{ zia_cloud }}"
        state: absent
        name: "{{ name }}"
      register: result

    - name: Verify Cloud Web DLP Rule is absent
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Ensure Cloud Web DLP Rule is (Present)
      zscaler.ziacloud.zia_dlp_web_rules:
        provider: "{{ zia_cloud }}"
        state: present
        name: "{{ name }}"
        description: "{{ description }}"
        action: "{{ action }}"
        order: "{{ order }}"
        rank: "{{ rank }}"
        enabled: "{{ enabled }}"
        without_content_inspection: "{{ without_content_inspection }}"
        zscaler_incident_receiver: "{{ zscaler_incident_receiver }}"
        user_risk_score_levels: "{{ user_risk_score_levels }}"
        protocols: "{{ protocols }}"
        file_types: "{{ file_types }}"
      register: result

    - name: Verify Cloud Web DLP Rule is present
      ansible.builtin.assert:
        that:
          - result.changed
          - result.data is defined
          - result.data.name is defined

    - name: Ensure Cloud Web DLP Rule (again; idempotency check)
      zscaler.ziacloud.zia_dlp_web_rules:
        provider: "{{ zia_cloud }}"
        state: present
        name: "{{ name }}"
        description: "{{ description }}"
        action: "{{ action }}"
        order: "{{ order }}"
        rank: "{{ rank }}"
        enabled: "{{ enabled }}"
        without_content_inspection: "{{ without_content_inspection }}"
        zscaler_incident_receiver: "{{ zscaler_incident_receiver }}"
        user_risk_score_levels: "{{ user_risk_score_levels }}"
        protocols: "{{ protocols }}"
        file_types: "{{ file_types }}"
      register: result

    - name: Ensure Cloud Web DLP Rule is absent (idempotency check)
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Fetch all Cloud Web DLP Rule
      zscaler.ziacloud.zia_dlp_web_rules_facts:
        provider: "{{ zia_cloud }}"
      register: result

    - name: Ensure all Cloud Web DLP Rule found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data[0] is defined

    - name: Update Cloud Web DLP Rule is (Present)
      zscaler.ziacloud.zia_dlp_web_rules:
        provider: "{{ zia_cloud }}"
        state: present
        name: "{{ name }}"
        description: "{{ description }}"
        action: "{{ action_update }}"
        order: "{{ order_update }}"
        rank: "{{ rank_update }}"
        enabled: "{{ enabled_update }}"
        without_content_inspection: "{{ without_content_inspection_update }}"
        zscaler_incident_receiver: "{{ zscaler_incident_receiver_update }}"
        user_risk_score_levels: "{{ user_risk_score_levels_update }}"
        protocols: "{{ protocols_update }}"
        file_types: "{{ file_types_update }}"
      register: result

    - name: Verify Cloud Web DLP Rule is present
      ansible.builtin.assert:
        that:
          - result.changed
          - result.data is defined
          - result.data.name == name
          - result.data.description == description
          - result.data.action == action_update

    - name: Ensure Cloud Web DLP Rule is Updated (again; idempotency check)
      zscaler.ziacloud.zia_dlp_web_rules:
        provider: "{{ zia_cloud }}"
        state: present
        name: "{{ name }}"
        description: "{{ description }}"
        action: "{{ action_update }}"
        order: "{{ order_update }}"
        rank: "{{ rank_update }}"
        enabled: "{{ enabled_update }}"
        without_content_inspection: "{{ without_content_inspection_update }}"
        zscaler_incident_receiver: "{{ zscaler_incident_receiver_update }}"
        user_risk_score_levels: "{{ user_risk_score_levels_update }}"
        protocols: "{{ protocols_update }}"
        file_types: "{{ file_types_update }}"
      register: result

    - name: Ensure Cloud Web DLP Rule is absent (idempotency check)
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Fetch all Cloud Web DLP Rule
      zscaler.ziacloud.zia_dlp_web_rules_facts:
        provider: "{{ zia_cloud }}"
      register: result

    - name: Ensure all Cloud Web DLP Rule found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data[0] is defined

    - name: Fetch this Cloud Web DLP Rule
      zscaler.ziacloud.zia_dlp_web_rules_facts:
        provider: "{{ zia_cloud }}"
        name: "{{ name }}"
      register: result

    - name: Ensure this Cloud Web DLP Rule is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
          - result.data[0].name is defined
          - result.data[0].name == name

    - name: Give the ZIA Cloud a 5 seconds to settle
      ansible.builtin.pause:
        seconds: 5

    - name: Delete Cloud Web DLP Rule
      zscaler.ziacloud.zia_dlp_web_rules:
        provider: "{{ zia_cloud }}"
        state: absent
        name: "{{ name }}"
        order: "{{ order }}"
      register: result

    - name: Verify Cloud Web DLP Rule is Deleted
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Delete Cloud Web DLP Rule (again; idempotency check)
      zscaler.ziacloud.zia_dlp_web_rules:
        provider: "{{ zia_cloud }}"
        state: absent
        name: "{{ name }}"
        order: "{{ order }}"
      register: result

    - name: Verify Cloud Web DLP Rule is absent
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
