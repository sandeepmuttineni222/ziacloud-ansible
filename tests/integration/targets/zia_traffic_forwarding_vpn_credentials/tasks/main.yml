---
- name: Include default variables
  ansible.builtin.include_vars:
    file: "../defaults/main.yml"

- name: Import Random String Generator Tasks
  ansible.builtin.import_tasks: "../../../generate_random_string.yml"

- ansible.builtin.set_fact:
    comments: "{{ comments }}_{{ random_string }}"

- name: Ensure required environment variables are set
  fail:
    msg: "{{ env_var }} is not defined as environment variable"
  when: lookup('env', env_var) is none
  loop:
    - ZIA_USERNAME
    - ZIA_PASSWORD
    - ZIA_API_KEY
    - ZIA_CLOUD
  loop_control:
    loop_var: env_var

- ansible.builtin.set_fact:
    zia_cloud:
      username: "{{ lookup('env', 'ZIA_USERNAME') }}"
      password: "{{ lookup('env', 'ZIA_PASSWORD') }}"
      api_key: "{{ lookup('env', 'ZIA_API_KEY') }}"
      cloud: "{{ lookup('env', 'ZIA_CLOUD') | default(omit) }}"
  no_log: True

- block:
    - name: Ensure VPN Credentials (leftover)
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
        provider: "{{ zia_cloud }}"
        state: absent
        type: "{{ type }}"
        fqdn: "{{ fqdn }}"
        comments: "{{ comments }}"
        pre_shared_key: "{{ pre_shared_key }}"
      register: result

    - name: Ensure VPN Credentials is absent
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
        provider: "{{ zia_cloud }}"
        state: absent
        type: "{{ type }}"
        fqdn: "{{ fqdn }}"
        comments: "{{ comments }}"
        pre_shared_key: "{{ pre_shared_key }}"
      register: result

    - name: Verify VPN Credentials is absent
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Ensure VPN Credentials is (Present)
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
        provider: "{{ zia_cloud }}"
        state: present
        type: "{{ type }}"
        fqdn: "{{ fqdn }}"
        comments: "{{ comments }}"
        pre_shared_key: "{{ pre_shared_key }}"
      register: result

    - name: Verify VPN Credentials is present
      ansible.builtin.assert:
        that:
          - result.changed
          - result.data.type is defined

    - name: Ensure VPN Credentials (again; idempotency check)
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
        provider: "{{ zia_cloud }}"
        state: present
        type: "{{ type }}"
        fqdn: "{{ fqdn }}"
        comments: "{{ comments }}"
        pre_shared_key: "{{ pre_shared_key }}"
      register: result

    - name: Ensure VPN Credentials is absent (idempotency check)
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Fetch all VPN Credentials
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials_facts:
        provider: "{{ zia_cloud }}"
      register: result

    - name: Ensure all VPN Credentials found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data[0] is defined

    - name: Fetch this VPN Credentials
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials_facts:
        provider: "{{ zia_cloud }}"
        fqdn: "{{ fqdn }}"
      register: result

    - name: Ensure this VPN Credentials is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
          - result.data[0].fqdn is defined
          - result.data[0].fqdn == fqdn

    - name: Give the ZIA Cloud a 5 seconds to settle
      ansible.builtin.pause:
        seconds: 5

    - name: Delete VPN Credentials
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
        provider: "{{ zia_cloud }}"
        state: absent
        type: "{{ type }}"
        fqdn: "{{ fqdn }}"
        comments: "{{ comments }}"
        pre_shared_key: "{{ pre_shared_key }}"
      register: result

    - name: Verify Destination Group of Type DSTN_IP is Deleted
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Delete VPN Credentials (again; idempotency check)
      zscaler.ziacloud.zia_traffic_forwarding_vpn_credentials:
        provider: "{{ zia_cloud }}"
        state: absent
        type: "{{ type }}"
        fqdn: "{{ fqdn }}"
        comments: "{{ comments }}"
        pre_shared_key: "{{ pre_shared_key }}"
      register: result

    - name: Verify VPN Credentials is absent
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
