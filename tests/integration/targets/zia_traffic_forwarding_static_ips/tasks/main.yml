---
- block:
    - name: Ensure ZIA API Credential is Set
      ansible.builtin.fail:
        msg: username, password and api_key should be defined in tests/integration/integration_config.yml
      when:
        - username is not defined
        - username | length == 0
        - password is not defined
        - password | length == 0
        - api_key  is not defined
        - api_key | length == 0
        - base_url | is not defined
        - base_url | length == 0

    - name: Ensure Static IP is absent (leftover)
      zscaler.ziacloud.zia_traffic_forwarding_static_ips:
        state: absent
        username: "{{ username }}"
        password: "{{ password }}"
        api_key: "{{ api_key }}"
        ip_address: "{{ ip_address }}"
        routable_ip: "{{ routable_ip }}"
        comment: "{{ comment }}"
        geo_override: "{{ geo_override }}"
        latitude: "{{ latitude }}"
        longitude: "{{ longitude }}"
      ignore_errors: true # In case one was left from previous run
      register: result

    - name: Ensure Static IP is absent
      zscaler.ziacloud.zia_traffic_forwarding_static_ips:
        state: absent
        username: "{{ username }}"
        password: "{{ password }}"
        api_key: "{{ api_key }}"
        ip_address: "{{ ip_address }}"
        routable_ip: "{{ routable_ip }}"
        comment: "{{ comment }}"
        geo_override: "{{ geo_override }}"
        latitude: "{{ latitude }}"
        longitude: "{{ longitude }}"
      register: result

    - name: Verify Static IP is absent
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Ensure Static IP is (Present)
      zscaler.ziacloud.zia_traffic_forwarding_static_ips:
        state: present
        username: "{{ username }}"
        password: "{{ password }}"
        api_key: "{{ api_key }}"
        ip_address: "{{ ip_address }}"
        routable_ip: "{{ routable_ip }}"
        comment: "{{ comment }}"
        geo_override: "{{ geo_override }}"
        latitude: "{{ latitude }}"
        longitude: "{{ longitude }}"
      register: result

    - name: Verify Static IP is Present
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
          - result.data.ip_address is defined
          - result.data.ip_address == ip_address

    - name: Ensure Static IP is (again; idempotency check)
      zscaler.ziacloud.zia_traffic_forwarding_static_ips:
        state: present
        username: "{{ username }}"
        password: "{{ password }}"
        api_key: "{{ api_key }}"
        ip_address: "{{ ip_address }}"
        routable_ip: "{{ routable_ip }}"
        comment: "{{ comment }}"
        geo_override: "{{ geo_override }}"
        latitude: "{{ latitude }}"
        longitude: "{{ longitude }}"
      register: result

    - name: Verify Static IP is absent
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Fetch All Static IPs
      zscaler.ziacloud.zia_traffic_forwarding_static_ips_info:
        username: "{{ username }}"
        password: "{{ password }}"
        api_key: "{{ api_key }}"
      register: result

    - name: Ensure all Static IPs found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Fetch this Static IP
      zscaler.ziacloud.zia_traffic_forwarding_static_ips_info:
        username: "{{ username }}"
        password: "{{ password }}"
        api_key: "{{ api_key }}"
        ip_address: "{{ ip_address }}"
      register: result

    - name: Ensure this Static IP is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
          - result.data[0].ip_address is defined
          - result.data[0].ip_address == ip_address

    - name: Delete Static IP
      zscaler.ziacloud.zia_traffic_forwarding_static_ips:
        state: absent
        username: "{{ username }}"
        password: "{{ password }}"
        api_key: "{{ api_key }}"
        ip_address: "{{ ip_address }}"
      register: result

    - name: Verify Static IP is Deleted
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Delete Static IP (again; idempotency check)
      zscaler.ziacloud.zia_traffic_forwarding_static_ips:
        state: absent
        username: "{{ username }}"
        password: "{{ password }}"
        api_key: "{{ api_key }}"
        ip_address: "{{ ip_address }}"
      register: result

    - name: Verify the Static IP is deleted
      ansible.builtin.assert:
        that:
          - not result.changed
