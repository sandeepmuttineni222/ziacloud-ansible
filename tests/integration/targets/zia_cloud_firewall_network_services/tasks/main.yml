---
- name: Include default variables
  ansible.builtin.include_vars:
    file: "../defaults/main.yml"

- name: Import Random String Generator Tasks
  ansible.builtin.import_tasks: "../../../generate_random_string.yml"

- ansible.builtin.set_fact:
    name: "{{ name }}_{{ random_string }}"
    description: "{{ description }}_{{ random_string }}"

- name: Ensure required environment variables are set
  fail:
    msg: "{{ env_var }} is not defined as environment variable"
  when: lookup('env', env_var) is none
  loop:
    - ZIA_USERNAME
    - ZIA_PASSWORD
    - ZIA_API_KEY
    - ZIA_CLOUD
  loop_control:
    loop_var: env_var

- ansible.builtin.set_fact:
    zia_cloud:
      username: "{{ lookup('env', 'ZIA_USERNAME') }}"
      password: "{{ lookup('env', 'ZIA_PASSWORD') }}"
      api_key: "{{ lookup('env', 'ZIA_API_KEY') }}"
      cloud: "{{ lookup('env', 'ZIA_CLOUD') | default(omit) }}"
  no_log: True

- block:
    - name: Ensure Network Services is absent (leftover)
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        provider: "{{ zia_cloud }}"
        state: absent
        name: "{{ name }}"
        description: "{{ description }}"
        src_tcp_ports: "{{ src_tcp_ports }}"
        dest_tcp_ports: "{{ dest_tcp_ports }}"
        type: "{{ type }}"
      register: result

    - name: Ensure Network Services is absent
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        provider: "{{ zia_cloud }}"
        state: absent
        name: "{{ name }}"
        description: "{{ description }}"
        src_tcp_ports: "{{ src_tcp_ports }}"
        dest_tcp_ports: "{{ dest_tcp_ports }}"
        type: "{{ type }}"
      register: result

    - name: Verify Network Services is absent
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Ensure Network Services is (Present)
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        provider: "{{ zia_cloud }}"
        state: present
        name: "{{ name }}"
        description: "{{ description }}"
        src_tcp_ports: "{{ src_tcp_ports }}"
        dest_tcp_ports: "{{ dest_tcp_ports }}"
        type: "{{ type }}"
      register: result

    - name: Verify Network Services is Present
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
          - result.data.name is defined
          - result.data.name == name
          - result.data.description is defined
          - result.data.description == description

    - name: Ensure Network Services is (again; idempotency check)
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        provider: "{{ zia_cloud }}"
        state: present
        name: "{{ name }}"
        description: "{{ description }}"
        src_tcp_ports: "{{ src_tcp_ports }}"
        dest_tcp_ports: "{{ dest_tcp_ports }}"
        type: "{{ type }}"
      register: result

    - name: Verify Network Services is absent
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Fetch All Network Services
      zscaler.ziacloud.zia_cloud_firewall_network_services_facts:
        provider: "{{ zia_cloud }}"
      register: result

    - name: Ensure all Network Services found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Fetch this Network Services
      zscaler.ziacloud.zia_cloud_firewall_network_services_facts:
        provider: "{{ zia_cloud }}"
        name: "{{ name }}"
      register: result

    - name: Ensure this Network Services is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
          - result.data[0].name is defined
          - result.data[0].name == name
          - result.data[0].description is defined
          - result.data[0].description == description

    - name: Delete Network Services
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        state: absent
        provider: "{{ zia_cloud }}"
        name: "{{ name }}"
      register: result

    - name: Verify Network Services is Deleted
      ansible.builtin.assert:
        that:
          - result.changed

    - name: Delete Network Services (again; idempotency check)
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        state: absent
        provider: "{{ zia_cloud }}"
        name: "{{ name }}"
      register: result

    - name: Verify the Network Services is deleted
      ansible.builtin.assert:
        that:
          - not result.changed
