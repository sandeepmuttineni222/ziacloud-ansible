---
- block:
    - name: Ensure ZIA API Credential is Set
      ansible.builtin.fail:
        msg: username, password and api_key should be defined in tests/integration/integration_config.yml
      when:
        - username is not defined
        - username | length == 0
        - password is not defined
        - password | length == 0
        - api_key  is not defined
        - api_key | length == 0
        - base_url | is not defined
        - base_url | length == 0

    - name: Ensure Network Services is absent (leftover)
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        state: absent
        username: "{{ username }}"
        password: "{{ password }}"
        api_key: "{{ api_key }}"
        base_url: "{{ base_url }}"
        name: "{{ name }}"
        description: "{{ description }}"
        src_tcp_ports: "{{ src_tcp_ports }}"
        dest_tcp_ports: "{{ dest_tcp_ports }}"
        type: "{{ type }}"
      ignore_errors: true # In case one was left from previous run
      register: result

    - name: Ensure Network Services is absent
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        state: absent
        username: "{{ username }}"
        password: "{{ password }}"
        api_key: "{{ api_key }}"
        base_url: "{{ base_url }}"
        name: "{{ name }}"
        description: "{{ description }}"
        src_tcp_ports: "{{ src_tcp_ports }}"
        dest_tcp_ports: "{{ dest_tcp_ports }}"
        type: "{{ type }}"
      register: result

    - name: Verify Network Services is absent
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Ensure Network Services is (Present)
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        state: present
        username: "{{ username }}"
        password: "{{ password }}"
        api_key: "{{ api_key }}"
        base_url: "{{ base_url }}"
        name: "{{ name }}"
        description: "{{ description }}"
        src_tcp_ports: "{{ src_tcp_ports }}"
        dest_tcp_ports: "{{ dest_tcp_ports }}"
        type: "{{ type }}"
      register: result

    - name: Verify Network Services is Present
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
          - result.data.name is defined
          - result.data.name == name
          - result.data.description is defined
          - result.data.description == description

    - name: Ensure Network Services is (again; idempotency check)
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        state: present
        username: "{{ username }}"
        password: "{{ password }}"
        api_key: "{{ api_key }}"
        base_url: "{{ base_url }}"
        name: "{{ name }}"
        description: "{{ description }}"
        src_tcp_ports: "{{ src_tcp_ports }}"
        dest_tcp_ports: "{{ dest_tcp_ports }}"
        type: "{{ type }}"
      register: result

    - name: Verify Network Services is absent
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Fetch All Network Services
      zscaler.ziacloud.zia_cloud_firewall_network_services_info:
        username: "{{ username }}"
        password: "{{ password }}"
        api_key: "{{ api_key }}"
        base_url: "{{ base_url }}"
      register: result

    - name: Ensure all Network Services found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined

    - name: Fetch this Network Services
      zscaler.ziacloud.zia_cloud_firewall_network_services_info:
        username: "{{ username }}"
        password: "{{ password }}"
        api_key: "{{ api_key }}"
        base_url: "{{ base_url }}"
        name: "{{ name }}"
      register: result

    - name: Ensure this Network Services is found
      ansible.builtin.assert:
        that:
          - not result.changed
          - result.data is defined
          - result.data[0].name is defined
          - result.data[0].name == name
          - result.data[0].description is defined
          - result.data[0].description == description

    - name: Delete Network Services
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        state: absent
        username: "{{ username }}"
        password: "{{ password }}"
        api_key: "{{ api_key }}"
        base_url: "{{ base_url }}"
        name: "{{ name }}"
      register: result

    - name: Verify Network Services is Deleted
      ansible.builtin.assert:
        that:
          - not result.changed

    - name: Delete Network Services (again; idempotency check)
      zscaler.ziacloud.zia_cloud_firewall_network_services:
        state: absent
        username: "{{ username }}"
        password: "{{ password }}"
        api_key: "{{ api_key }}"
        base_url: "{{ base_url }}"
        name: "{{ name }}"
      register: result

    - name: Verify the Network Services is deleted
      ansible.builtin.assert:
        that:
          - not result.changed
